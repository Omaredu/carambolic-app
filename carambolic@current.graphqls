type Act {
  body: String
  createdAt: ISO8601DateTime!
  id: ID!
  image: String
  story: Story
  title: String
  updatedAt: ISO8601DateTime!
}

"""Autogenerated input type of ActCreate"""
input ActCreateInput {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  actInput: ActInput!
}

"""Autogenerated return type of ActCreate."""
type ActCreatePayload {
  act: Act

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""Autogenerated input type of ActDelete"""
input ActDeleteInput {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  actId: ID!
}

"""Autogenerated return type of ActDelete."""
type ActDeletePayload {
  act: Act

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

input ActInput {
  title: String!
  body: String!
  image: String!
  storyId: ID!
}

type Bookmark {
  createdAt: ISO8601DateTime!
  id: ID!
  isTrue: Boolean
  stories: [Story!]
  summary: String
  thumbnail: String
  title: String
  updatedAt: ISO8601DateTime!
  url: String
  user: User
}

"""Autogenerated input type of BookmarkCreate"""
input BookmarkCreateInput {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  bookmarkInput: BookmarkInput!
}

"""Autogenerated return type of BookmarkCreate."""
type BookmarkCreatePayload {
  bookmark: Bookmark

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""Autogenerated input type of BookmarkDelete"""
input BookmarkDeleteInput {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  bookmarkId: ID!
}

"""Autogenerated return type of BookmarkDelete."""
type BookmarkDeletePayload {
  bookmark: Bookmark

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

input BookmarkInput {
  title: String
  url: String
  thumbnail: String
  summary: String
  htmlContent: String
}

"""Autogenerated input type of BookmarkUpdate"""
input BookmarkUpdateInput {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  bookmarkId: ID!
  bookmarkInput: BookmarkInput!
}

"""Autogenerated return type of BookmarkUpdate."""
type BookmarkUpdatePayload {
  bookmark: Bookmark

  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""An ISO 8601-encoded datetime"""
scalar ISO8601DateTime

type Mutation {
  """Create a new act"""
  actCreate(
    """Parameters for ActCreate"""
    input: ActCreateInput!
  ): ActCreatePayload

  """Delete an act"""
  actDelete(
    """Parameters for ActDelete"""
    input: ActDeleteInput!
  ): ActDeletePayload

  """Create a new bookmark"""
  bookmarkCreate(
    """Parameters for BookmarkCreate"""
    input: BookmarkCreateInput!
  ): BookmarkCreatePayload

  """Delete a bookmark"""
  bookmarkDelete(
    """Parameters for BookmarkDelete"""
    input: BookmarkDeleteInput!
  ): BookmarkDeletePayload

  """Update a bookmark"""
  bookmarkUpdate(
    """Parameters for BookmarkUpdate"""
    input: BookmarkUpdateInput!
  ): BookmarkUpdatePayload

  """Publish a story"""
  publishStory(
    """Parameters for PublishStory"""
    input: PublishStoryInput!
  ): PublishStoryPayload

  """Create a story"""
  storyCreate(
    """Parameters for StoryCreate"""
    input: StoryCreateInput!
  ): StoryCreatePayload

  """Delete a story"""
  storyDelete(
    """Parameters for StoryDelete"""
    input: StoryDeleteInput!
  ): StoryDeletePayload

  """Create a new user"""
  userCreate(
    """Parameters for UserCreate"""
    input: UserCreateInput!
  ): UserCreatePayload

  """Delete a user"""
  userDelete(
    """Parameters for UserDelete"""
    input: UserDeleteInput!
  ): UserDeletePayload
}

"""Autogenerated input type of PublishStory"""
input PublishStoryInput {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  storyId: ID!
}

"""Autogenerated return type of PublishStory."""
type PublishStoryPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  story: Story
}

type Query {
  """Find an act by ID"""
  act(id: ID!): Act!

  """Find all acts"""
  acts: [Act!]!

  """Find a bookmark by ID"""
  bookmark(id: ID!): Bookmark!

  """Find all bookmarks"""
  bookmarks: [Bookmark!]!

  """Find the current user"""
  me: User

  """Find all stories"""
  stories: [Story!]!

  """Find a story by ID"""
  story(id: ID!): Story!

  """Find a user by ID"""
  user(id: ID!): User!

  """Find all users"""
  users: [User!]!
}

type Story {
  acts: [Act!]
  bookmark: Bookmark
  createdAt: ISO8601DateTime!
  id: ID!
  isPublic: Boolean
  title: String
  updatedAt: ISO8601DateTime!
}

"""Autogenerated input type of StoryCreate"""
input StoryCreateInput {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  storyInput: StoryInput!
}

"""Autogenerated return type of StoryCreate."""
type StoryCreatePayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  story: Story
}

"""Autogenerated input type of StoryDelete"""
input StoryDeleteInput {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  storyId: ID!
}

"""Autogenerated return type of StoryDelete."""
type StoryDeletePayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  story: Story
}

input StoryInput {
  isPublic: Boolean!
  bookmarkId: ID!
}

type User {
  """Find a bookmark by ID"""
  bookmark(id: ID!): Bookmark!
  bookmarks: [Bookmark!]!

  """Find bookmarks with text contained in the title or body"""
  bookmarksByQuery(text: String!): [Bookmark!]!
  createdAt: ISO8601DateTime!
  email: String
  id: ID!
  name: String
  stories: [Story!]!

  """Find stories with text contained in the title or body"""
  storiesByQuery(text: String!): [Story!]!

  """Find a story by ID"""
  story(id: ID!): Story!
  updatedAt: ISO8601DateTime!
}

"""Autogenerated input type of UserCreate"""
input UserCreateInput {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  userInput: UserInput!
}

"""Autogenerated return type of UserCreate."""
type UserCreatePayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  user: User
}

"""Autogenerated input type of UserDelete"""
input UserDeleteInput {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  userId: ID!
}

"""Autogenerated return type of UserDelete."""
type UserDeletePayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  user: User
}

input UserInput {
  email: String!
  name: String!
}